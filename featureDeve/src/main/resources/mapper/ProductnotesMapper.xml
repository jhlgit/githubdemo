<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhl.entity.pojo.ProductnotesMapper">
  <resultMap id="BaseResultMap" type="com.jhl.entity.pojo.Productnotes">
    <id column="note_id" jdbcType="INTEGER" property="noteId" />
    <result column="prod_id" jdbcType="CHAR" property="prodId" />
    <result column="note_date" jdbcType="TIMESTAMP" property="noteDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jhl.entity.pojo.Productnotes">
    <result column="note_text" jdbcType="LONGVARCHAR" property="noteText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    note_id, prod_id, note_date
  </sql>
  <sql id="Blob_Column_List">
    note_text
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jhl.entity.pojo.ProductnotesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from productnotes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jhl.entity.pojo.ProductnotesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productnotes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from productnotes
    where note_id = #{noteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productnotes
    where note_id = #{noteId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jhl.entity.pojo.ProductnotesExample">
    delete from productnotes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jhl.entity.pojo.Productnotes">
    insert into productnotes (note_id, prod_id, note_date, 
      note_text)
    values (#{noteId,jdbcType=INTEGER}, #{prodId,jdbcType=CHAR}, #{noteDate,jdbcType=TIMESTAMP}, 
      #{noteText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jhl.entity.pojo.Productnotes">
    insert into productnotes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        note_id,
      </if>
      <if test="prodId != null">
        prod_id,
      </if>
      <if test="noteDate != null">
        note_date,
      </if>
      <if test="noteText != null">
        note_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="prodId != null">
        #{prodId,jdbcType=CHAR},
      </if>
      <if test="noteDate != null">
        #{noteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="noteText != null">
        #{noteText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jhl.entity.pojo.ProductnotesExample" resultType="java.lang.Long">
    select count(*) from productnotes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productnotes
    <set>
      <if test="record.noteId != null">
        note_id = #{record.noteId,jdbcType=INTEGER},
      </if>
      <if test="record.prodId != null">
        prod_id = #{record.prodId,jdbcType=CHAR},
      </if>
      <if test="record.noteDate != null">
        note_date = #{record.noteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noteText != null">
        note_text = #{record.noteText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update productnotes
    set note_id = #{record.noteId,jdbcType=INTEGER},
      prod_id = #{record.prodId,jdbcType=CHAR},
      note_date = #{record.noteDate,jdbcType=TIMESTAMP},
      note_text = #{record.noteText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productnotes
    set note_id = #{record.noteId,jdbcType=INTEGER},
      prod_id = #{record.prodId,jdbcType=CHAR},
      note_date = #{record.noteDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhl.entity.pojo.Productnotes">
    update productnotes
    <set>
      <if test="prodId != null">
        prod_id = #{prodId,jdbcType=CHAR},
      </if>
      <if test="noteDate != null">
        note_date = #{noteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="noteText != null">
        note_text = #{noteText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jhl.entity.pojo.Productnotes">
    update productnotes
    set prod_id = #{prodId,jdbcType=CHAR},
      note_date = #{noteDate,jdbcType=TIMESTAMP},
      note_text = #{noteText,jdbcType=LONGVARCHAR}
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhl.entity.pojo.Productnotes">
    update productnotes
    set prod_id = #{prodId,jdbcType=CHAR},
      note_date = #{noteDate,jdbcType=TIMESTAMP}
    where note_id = #{noteId,jdbcType=INTEGER}
  </update>
</mapper>