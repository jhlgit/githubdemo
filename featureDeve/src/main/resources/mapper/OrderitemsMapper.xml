<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhl.entity.pojo.OrderitemsMapper">
  <resultMap id="BaseResultMap" type="com.jhl.entity.pojo.Orderitems">
    <id column="order_num" jdbcType="INTEGER" property="orderNum" />
    <id column="order_item" jdbcType="INTEGER" property="orderItem" />
    <result column="prod_id" jdbcType="CHAR" property="prodId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="item_price" jdbcType="DECIMAL" property="itemPrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_num, order_item, prod_id, quantity, item_price, remark
  </sql>
  <select id="selectByExample" parameterType="com.jhl.entity.pojo.OrderitemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.jhl.entity.pojo.OrderitemsKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderitems
    where order_num = #{orderNum,jdbcType=INTEGER}
      and order_item = #{orderItem,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jhl.entity.pojo.OrderitemsKey">
    delete from orderitems
    where order_num = #{orderNum,jdbcType=INTEGER}
      and order_item = #{orderItem,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jhl.entity.pojo.OrderitemsExample">
    delete from orderitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jhl.entity.pojo.Orderitems">
    insert into orderitems (order_num, order_item, prod_id, 
      quantity, item_price, remark
      )
    values (#{orderNum,jdbcType=INTEGER}, #{orderItem,jdbcType=INTEGER}, #{prodId,jdbcType=CHAR}, 
      #{quantity,jdbcType=INTEGER}, #{itemPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jhl.entity.pojo.Orderitems">
    insert into orderitems
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="orderItem != null">
        order_item,
      </if>
      <if test="prodId != null">
        prod_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="itemPrice != null">
        item_price,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderItem != null">
        #{orderItem,jdbcType=INTEGER},
      </if>
      <if test="prodId != null">
        #{prodId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="itemPrice != null">
        #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jhl.entity.pojo.OrderitemsExample" resultType="java.lang.Long">
    select count(*) from orderitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderitems
    <set>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=INTEGER},
      </if>
      <if test="record.orderItem != null">
        order_item = #{record.orderItem,jdbcType=INTEGER},
      </if>
      <if test="record.prodId != null">
        prod_id = #{record.prodId,jdbcType=CHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.itemPrice != null">
        item_price = #{record.itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderitems
    set order_num = #{record.orderNum,jdbcType=INTEGER},
      order_item = #{record.orderItem,jdbcType=INTEGER},
      prod_id = #{record.prodId,jdbcType=CHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      item_price = #{record.itemPrice,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhl.entity.pojo.Orderitems">
    update orderitems
    <set>
      <if test="prodId != null">
        prod_id = #{prodId,jdbcType=CHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="itemPrice != null">
        item_price = #{itemPrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_num = #{orderNum,jdbcType=INTEGER}
      and order_item = #{orderItem,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhl.entity.pojo.Orderitems">
    update orderitems
    set prod_id = #{prodId,jdbcType=CHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      item_price = #{itemPrice,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR}
    where order_num = #{orderNum,jdbcType=INTEGER}
      and order_item = #{orderItem,jdbcType=INTEGER}
  </update>
</mapper>